---
openapi: 3.0.3
info:
  title: Wikimedia Enterprise Realtime API
  description: Provides realtime streams of data in NDJSON and Server Side Events.
  version: beta
servers:
  - url: http://localhost:4040
    description: Localhost server
  - url: https://realtime-beta-dv.wikipediaenterprise.org/
    description: Development server
  - url: https://realtime-beta.enterprise.wikimedia.com/
    description: Production server
security:
  - bearerAuth: []
paths:
  /v2/articles:
    get:
      description: Server Side Events stream for Articles in JSON, realtime feed of changes.
      tags:
        - articles
      summary: Articles stream.
      operationId: v2-articles-get
      parameters:
        - description: Since Date in RFC3339 ('2006-01-02T15:04:05Z07:00')
          in: query
          name: since
          schema:
            type: string
        - description: Specify return fields that you need (example `version.*` will return all version object fields)
          in: query
          name: fields
          schema:
            type: array
        - description: You can specify how you want to filter your data.
          in: query
          name: filters
          example: { "field": "in_language.identifier", "value": "en" }
          schema:
            type: array
            items:
              $ref: "#/components/schemas/filter"
        - in: header
          name: accept
          schema:
            type: string
            default: text/event-stream
            enum:
              - text/event-stream
              - application/x-ndjson
      responses:
        200:
          description: OK
          content:
            text/event-stream:
              schema:
                $ref: "#/components/schemas/article"
            application/x-ndjson:
              schema:
                $ref: "#/components/schemas/article"
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    post:
      description: Server Side Events stream for Articles in JSON, realtime feed of changes.
      tags:
        - articles
      summary: Articles stream.
      operationId: v2-articles-post
      parameters:
        - in: header
          name: accept
          schema:
            type: string
            default: text/event-stream
            enum:
              - text/event-stream
              - application/x-ndjson
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                since:
                  type: string
                  example: "2006-01-02T15:04:05Z"
                  description: Since Date in RFC3339 ('2006-01-02T15:04:05Z07:00')
                fields:
                  type: array
                  example: ["name", "identifier"]
                  items:
                    type: string
                  description: Specify return fields that you need (example `version.*` will return all version object fields)
                filters:
                  type: array
                  items:
                    $ref: "#/components/schemas/filter"
                  example: [{ "field": "in_language.identifier", "value": "en" }]
      responses:
        200:
          description: OK
          content:
            application/ndjson:
              schema:
                $ref: "#/components/schemas/article"
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    error:
      properties:
        message:
          type: string
        status:
          type: integer
      type: object

    damaging:
      properties:
        prediction:
          type: boolean
        probability:
          properties:
            "false":
              type: number
            "true":
              type: number
          type: object
      type: object

    good_faith:
      properties:
        prediction:
          type: boolean
        probability:
          properties:
            "false":
              type: number
            "true":
              type: number
          type: object
      type: object

    article_body:
      properties:
        html:
          type: string
        wikitext:
          type: string
      type: object

    editor:
      properties:
        date_started:
          type: string
        edit_count:
          type: integer
        groups:
          items:
            type: string
          type: array
        identifier:
          type: integer
        is_anonymous:
          type: boolean
        is_bot:
          type: boolean
        name:
          type: string
      type: object

    entity:
      properties:
        aspects:
          items:
            type: string
          type: array
        identifier:
          type: string
        url:
          type: string
      type: object

    language:
      properties:
        identifier:
          type: string
        name:
          type: string
      type: object

    license:
      properties:
        identifier:
          type: string
        name:
          type: string
        url:
          type: string
      type: object

    namespace:
      properties:
        identifier:
          type: integer
        name:
          type: string
      type: object

    article:
      properties:
        event:
          $ref: "#/components/schemas/event"
        additional_entities:
          items:
            $ref: "#/components/schemas/entity"
          type: array
        article_body:
          $ref: "#/components/schemas/article_body"
        categories:
          items:
            $ref: "#/components/schemas/category"
          type: array
        date_modified:
          type: string
        identifier:
          type: integer
        in_language:
          $ref: "#/components/schemas/language"
        is_part_of:
          $ref: "#/components/schemas/project"
        license:
          items:
            $ref: "#/components/schemas/license"
          type: array
        main_entity:
          $ref: "#/components/schemas/entity"
        name:
          type: string
        namespace:
          $ref: "#/components/schemas/namespace"
        protection:
          items:
            $ref: "#/components/schemas/protection"
          type: array
        redirects:
          items:
            $ref: "#/components/schemas/redirect"
          type: array
        templates:
          items:
            $ref: "#/components/schemas/template"
          type: array
        url:
          type: string
        version:
          $ref: "#/components/schemas/version"
        visibility:
          $ref: "#/components/schemas/visibility"
      type: object

    project:
      properties:
        date_modified:
          type: string
        identifier:
          type: string
        in_language:
          $ref: "#/components/schemas/language"
        name:
          type: string
        size:
          $ref: "#/components/schemas/size"
        url:
          type: string
        version:
          type: string
      type: object

    protection:
      properties:
        expiry:
          type: string
        level:
          type: string
        type:
          type: string
      type: object

    scores:
      properties:
        damaging:
          $ref: "#/components/schemas/damaging"
        good_faith:
          $ref: "#/components/schemas/good_faith"
      type: object

    size:
      properties:
        unit_text:
          type: string
        value:
          type: number
      type: object

    version:
      properties:
        comment:
          type: string
        editor:
          $ref: "#/components/schemas/editor"
        identifier:
          type: integer
        is_flagged_stable:
          type: boolean
        is_minor_edit:
          type: boolean
        scores:
          $ref: "#/components/schemas/scores"
        tags:
          items:
            type: string
          type: array
      type: object

    visibility:
      properties:
        comment:
          type: boolean
        text:
          type: boolean
        user:
          type: boolean
      type: object

    redirect:
      properties:
        name:
          type: string
        url:
          type: string
      type: object

    template:
      properties:
        name:
          type: string
        url:
          type: string
      type: object

    category:
      properties:
        name:
          type: string
        url:
          type: string
      type: object

    event:
      properties:
        identifier:
          type: string
        type:
          type: string
        date_created:
          type: string
      type: object

    filter:
      properties:
        field:
          type: string
        value:
          type: string
