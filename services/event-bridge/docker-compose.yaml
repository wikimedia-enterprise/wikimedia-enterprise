version: "3.9"

services:
  # Redis server
  redis:
    image: redis:latest
    ports:
      - 6379:6379

  # Redis UI tool
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"

  # Confluent Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  # Confluent Kafka broker
  broker:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://broker:29092,LISTENER_DOCKER_EXTERNAL://broker:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 20971520
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_COMPRESSION_TYPE: gzip

  # Kafka topics/messages UI tool
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8180:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schemaregistry:8085
      KAFKA_CLUSTERS_0_SCHEMANAMETEMPLATE: __schemas

  # Confluent schema registry
  schemaregistry:
    image: confluentinc/cp-schema-registry:latest
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8085:8085"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: localhost
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:9092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8085

      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: http
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 2
      SCHEMA_REGISTRY_DEBUG: 'true'

  # pagecreate service
  pagecreate:
    build:
      context: ./../../.
      dockerfile: ./docker/handlers/Dockerfile
      args:
        SOURCE_DIR: ./services/event-bridge/handlers/pagecreate
    depends_on:
      - broker
      - redis
    env_file:
      - ./.env
    ports:
      - "12410:12410"
  
  # pagedelete service
  pagedelete:
    build:
      context: ./../../.
      dockerfile: ./docker/handlers/Dockerfile
      args:
        SOURCE_DIR: ./services/event-bridge/handlers/pagedelete
    depends_on:
      - broker
      - redis
    env_file:
      - ./.env
    ports:
      - "12411:12411"

  # pagemove service
  pagemove:
    build:
      context: ./../../.
      dockerfile: ./docker/handlers/Dockerfile
      args:
        SOURCE_DIR: ./services/event-bridge/handlers/pagemove
    depends_on:
      - broker
      - redis
    env_file:
      - ./.env
    ports:
      - "12412:12412"

  # revisioncreate service
  revisioncreate:
    build:
      context: ./../../.
      dockerfile: ./docker/handlers/Dockerfile
      args:
        SOURCE_DIR: ./services/event-bridge/handlers/revisioncreate
    depends_on:
      - broker
      - redis
    env_file:
      - ./.env
    ports:
      - "12413:12413"

  # revisionvisibility service
  revisionvisibility:
    build:
      context: ./../../.
      dockerfile: ./docker/handlers/Dockerfile
      args:
        SOURCE_DIR: ./services/event-bridge/handlers/revisionvisibility
    depends_on:
      - broker
      - redis
    env_file:
      - ./.env
    ports:
      - "12415:12415"
