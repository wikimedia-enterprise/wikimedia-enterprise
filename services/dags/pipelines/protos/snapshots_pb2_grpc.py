# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pipelines.protos import snapshots_pb2 as pipelines_dot_protos_dot_snapshots__pb2


class SnapshotsStub(object):
    """Snapshots service method definitions
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Export = channel.unary_unary(
                '/snapshots.Snapshots/Export',
                request_serializer=pipelines_dot_protos_dot_snapshots__pb2.ExportRequest.SerializeToString,
                response_deserializer=pipelines_dot_protos_dot_snapshots__pb2.ExportResponse.FromString,
                )
        self.Copy = channel.unary_unary(
                '/snapshots.Snapshots/Copy',
                request_serializer=pipelines_dot_protos_dot_snapshots__pb2.CopyRequest.SerializeToString,
                response_deserializer=pipelines_dot_protos_dot_snapshots__pb2.CopyResponse.FromString,
                )
        self.Aggregate = channel.unary_unary(
                '/snapshots.Snapshots/Aggregate',
                request_serializer=pipelines_dot_protos_dot_snapshots__pb2.AggregateRequest.SerializeToString,
                response_deserializer=pipelines_dot_protos_dot_snapshots__pb2.AggregateResponse.FromString,
                )
        self.AggregateCopy = channel.unary_unary(
                '/snapshots.Snapshots/AggregateCopy',
                request_serializer=pipelines_dot_protos_dot_snapshots__pb2.AggregateCopyRequest.SerializeToString,
                response_deserializer=pipelines_dot_protos_dot_snapshots__pb2.AggregateCopyResponse.FromString,
                )
        self.AggregateCommons = channel.unary_unary(
                '/snapshots.Snapshots/AggregateCommons',
                request_serializer=pipelines_dot_protos_dot_snapshots__pb2.AggregateCommonsRequest.SerializeToString,
                response_deserializer=pipelines_dot_protos_dot_snapshots__pb2.AggregateCommonsResponse.FromString,
                )


class SnapshotsServicer(object):
    """Snapshots service method definitions
    """

    def Export(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Copy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Aggregate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AggregateCopy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AggregateCommons(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SnapshotsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Export': grpc.unary_unary_rpc_method_handler(
                    servicer.Export,
                    request_deserializer=pipelines_dot_protos_dot_snapshots__pb2.ExportRequest.FromString,
                    response_serializer=pipelines_dot_protos_dot_snapshots__pb2.ExportResponse.SerializeToString,
            ),
            'Copy': grpc.unary_unary_rpc_method_handler(
                    servicer.Copy,
                    request_deserializer=pipelines_dot_protos_dot_snapshots__pb2.CopyRequest.FromString,
                    response_serializer=pipelines_dot_protos_dot_snapshots__pb2.CopyResponse.SerializeToString,
            ),
            'Aggregate': grpc.unary_unary_rpc_method_handler(
                    servicer.Aggregate,
                    request_deserializer=pipelines_dot_protos_dot_snapshots__pb2.AggregateRequest.FromString,
                    response_serializer=pipelines_dot_protos_dot_snapshots__pb2.AggregateResponse.SerializeToString,
            ),
            'AggregateCopy': grpc.unary_unary_rpc_method_handler(
                    servicer.AggregateCopy,
                    request_deserializer=pipelines_dot_protos_dot_snapshots__pb2.AggregateCopyRequest.FromString,
                    response_serializer=pipelines_dot_protos_dot_snapshots__pb2.AggregateCopyResponse.SerializeToString,
            ),
            'AggregateCommons': grpc.unary_unary_rpc_method_handler(
                    servicer.AggregateCommons,
                    request_deserializer=pipelines_dot_protos_dot_snapshots__pb2.AggregateCommonsRequest.FromString,
                    response_serializer=pipelines_dot_protos_dot_snapshots__pb2.AggregateCommonsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'snapshots.Snapshots', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Snapshots(object):
    """Snapshots service method definitions
    """

    @staticmethod
    def Export(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/snapshots.Snapshots/Export',
            pipelines_dot_protos_dot_snapshots__pb2.ExportRequest.SerializeToString,
            pipelines_dot_protos_dot_snapshots__pb2.ExportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Copy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/snapshots.Snapshots/Copy',
            pipelines_dot_protos_dot_snapshots__pb2.CopyRequest.SerializeToString,
            pipelines_dot_protos_dot_snapshots__pb2.CopyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Aggregate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/snapshots.Snapshots/Aggregate',
            pipelines_dot_protos_dot_snapshots__pb2.AggregateRequest.SerializeToString,
            pipelines_dot_protos_dot_snapshots__pb2.AggregateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AggregateCopy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/snapshots.Snapshots/AggregateCopy',
            pipelines_dot_protos_dot_snapshots__pb2.AggregateCopyRequest.SerializeToString,
            pipelines_dot_protos_dot_snapshots__pb2.AggregateCopyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AggregateCommons(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/snapshots.Snapshots/AggregateCommons',
            pipelines_dot_protos_dot_snapshots__pb2.AggregateCommonsRequest.SerializeToString,
            pipelines_dot_protos_dot_snapshots__pb2.AggregateCommonsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
