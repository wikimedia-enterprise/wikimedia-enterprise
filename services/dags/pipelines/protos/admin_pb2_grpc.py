# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pipelines.protos import admin_pb2 as pipelines_dot_protos_dot_admin__pb2


class AdminStub(object):
    """Admin service serves RPCs related to internal processes.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Delete = channel.unary_unary(
                '/admin.Admin/Delete',
                request_serializer=pipelines_dot_protos_dot_admin__pb2.DeleteRequest.SerializeToString,
                response_deserializer=pipelines_dot_protos_dot_admin__pb2.DeleteResponse.FromString,
                )
        self.Refresh = channel.unary_unary(
                '/admin.Admin/Refresh',
                request_serializer=pipelines_dot_protos_dot_admin__pb2.RefreshRequest.SerializeToString,
                response_deserializer=pipelines_dot_protos_dot_admin__pb2.RefreshResponse.FromString,
                )


class AdminServicer(object):
    """Admin service serves RPCs related to internal processes.
    """

    def Delete(self, request, context):
        """Eliminate one or more articles from our Kafka topics and S3.
        This is done by simulating a regular WMF "article deleted" event
        and letting it go through our system. 
        The article(s) may be re-ingested on their next revision or the
        next bulk-ingestion.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Refresh(self, request, context):
        """Trigger a re-ingestion of one or more articles.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=pipelines_dot_protos_dot_admin__pb2.DeleteRequest.FromString,
                    response_serializer=pipelines_dot_protos_dot_admin__pb2.DeleteResponse.SerializeToString,
            ),
            'Refresh': grpc.unary_unary_rpc_method_handler(
                    servicer.Refresh,
                    request_deserializer=pipelines_dot_protos_dot_admin__pb2.RefreshRequest.FromString,
                    response_serializer=pipelines_dot_protos_dot_admin__pb2.RefreshResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'admin.Admin', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Admin(object):
    """Admin service serves RPCs related to internal processes.
    """

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admin.Admin/Delete',
            pipelines_dot_protos_dot_admin__pb2.DeleteRequest.SerializeToString,
            pipelines_dot_protos_dot_admin__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Refresh(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/admin.Admin/Refresh',
            pipelines_dot_protos_dot_admin__pb2.RefreshRequest.SerializeToString,
            pipelines_dot_protos_dot_admin__pb2.RefreshResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
