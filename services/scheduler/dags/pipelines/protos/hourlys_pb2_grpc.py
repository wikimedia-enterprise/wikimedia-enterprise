# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pipelines.protos import hourlys_pb2 as pipelines_dot_protos_dot_hourlys__pb2


class HourlysStub(object):
    """Hourlys service method definitions
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Export = channel.unary_unary(
                '/hourlys.Hourlys/Export',
                request_serializer=pipelines_dot_protos_dot_hourlys__pb2.ExportRequest.SerializeToString,
                response_deserializer=pipelines_dot_protos_dot_hourlys__pb2.ExportResponse.FromString,
                )
        self.Tidy = channel.unary_unary(
                '/hourlys.Hourlys/Tidy',
                request_serializer=pipelines_dot_protos_dot_hourlys__pb2.TidyRequest.SerializeToString,
                response_deserializer=pipelines_dot_protos_dot_hourlys__pb2.TidyResponse.FromString,
                )
        self.Aggregate = channel.unary_unary(
                '/hourlys.Hourlys/Aggregate',
                request_serializer=pipelines_dot_protos_dot_hourlys__pb2.AggregateRequest.SerializeToString,
                response_deserializer=pipelines_dot_protos_dot_hourlys__pb2.AggregateResponse.FromString,
                )


class HourlysServicer(object):
    """Hourlys service method definitions
    """

    def Export(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Tidy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Aggregate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HourlysServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Export': grpc.unary_unary_rpc_method_handler(
                    servicer.Export,
                    request_deserializer=pipelines_dot_protos_dot_hourlys__pb2.ExportRequest.FromString,
                    response_serializer=pipelines_dot_protos_dot_hourlys__pb2.ExportResponse.SerializeToString,
            ),
            'Tidy': grpc.unary_unary_rpc_method_handler(
                    servicer.Tidy,
                    request_deserializer=pipelines_dot_protos_dot_hourlys__pb2.TidyRequest.FromString,
                    response_serializer=pipelines_dot_protos_dot_hourlys__pb2.TidyResponse.SerializeToString,
            ),
            'Aggregate': grpc.unary_unary_rpc_method_handler(
                    servicer.Aggregate,
                    request_deserializer=pipelines_dot_protos_dot_hourlys__pb2.AggregateRequest.FromString,
                    response_serializer=pipelines_dot_protos_dot_hourlys__pb2.AggregateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hourlys.Hourlys', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Hourlys(object):
    """Hourlys service method definitions
    """

    @staticmethod
    def Export(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hourlys.Hourlys/Export',
            pipelines_dot_protos_dot_hourlys__pb2.ExportRequest.SerializeToString,
            pipelines_dot_protos_dot_hourlys__pb2.ExportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Tidy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hourlys.Hourlys/Tidy',
            pipelines_dot_protos_dot_hourlys__pb2.TidyRequest.SerializeToString,
            pipelines_dot_protos_dot_hourlys__pb2.TidyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Aggregate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hourlys.Hourlys/Aggregate',
            pipelines_dot_protos_dot_hourlys__pb2.AggregateRequest.SerializeToString,
            pipelines_dot_protos_dot_hourlys__pb2.AggregateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
