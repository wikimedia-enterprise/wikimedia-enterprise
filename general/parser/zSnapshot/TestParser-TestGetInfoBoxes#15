([]*parser.Part) (len=1) {
  (*parser.Part)({
    Name: (string) (len=20) "Infobox song contest",
    Type: (string) (len=7) "infobox",
    Value: (string) "",
    Values: ([]string) <nil>,
    HasParts: ([]*parser.Part) (len=6) {
      (*parser.Part)({
        Name: (string) (len=28) "Eurovision Song Contest 2023",
        Type: (string) (len=7) "section",
        Value: (string) "",
        Values: ([]string) <nil>,
        HasParts: ([]*parser.Part) <nil>,
        Images: ([]*parser.Image) <nil>,
        Links: ([]*parser.Link) <nil>
      }),
      (*parser.Part)({
        Name: (string) (len=15) "United by Music",
        Type: (string) (len=7) "section",
        Value: (string) "",
        Values: ([]string) <nil>,
        HasParts: ([]*parser.Part) (len=1) {
          (*parser.Part)({
            Name: (string) "",
            Type: (string) (len=5) "image",
            Value: (string) "",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) (len=1) {
              (*parser.Image)({
                ContentUrl: (string) (len=138) "https://upload.wikimedia.org/wikipedia/en/thumb/8/8a/Eurovision_Song_Contest_2023_logo.svg/250px-Eurovision_Song_Contest_2023_logo.svg.png",
                AlternativeText: (string) (len=33) "Eurovision Song Contest 2023 logo",
                Caption: (string) "",
                Height: (int) 250,
                Width: (int) 250
              })
            },
            Links: ([]*parser.Link) {
            }
          })
        },
        Images: ([]*parser.Image) <nil>,
        Links: ([]*parser.Link) <nil>
      }),
      (*parser.Part)({
        Name: (string) (len=5) "Dates",
        Type: (string) (len=7) "section",
        Value: (string) "",
        Values: ([]string) <nil>,
        HasParts: ([]*parser.Part) (len=3) {
          (*parser.Part)({
            Name: (string) (len=12) "Semi-final 1",
            Type: (string) (len=5) "field",
            Value: (string) (len=10) "9 May 2023",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) {
            }
          }),
          (*parser.Part)({
            Name: (string) (len=12) "Semi-final 2",
            Type: (string) (len=5) "field",
            Value: (string) (len=11) "11 May 2023",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) {
            }
          }),
          (*parser.Part)({
            Name: (string) (len=5) "Final",
            Type: (string) (len=5) "field",
            Value: (string) (len=11) "13 May 2023",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) {
            }
          })
        },
        Images: ([]*parser.Image) <nil>,
        Links: ([]*parser.Link) <nil>
      }),
      (*parser.Part)({
        Name: (string) (len=4) "Host",
        Type: (string) (len=7) "section",
        Value: (string) "",
        Values: ([]string) <nil>,
        HasParts: ([]*parser.Part) (len=7) {
          (*parser.Part)({
            Name: (string) (len=5) "Venue",
            Type: (string) (len=5) "field",
            Value: (string) (len=41) "Liverpool Arena Liverpool, United Kingdom",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) (len=1) {
              (*parser.Link)({
                URL: (string) (len=45) "https://en.wikipedia.org/wiki/Liverpool_Arena",
                Text: (string) (len=15) "Liverpool Arena",
                Images: ([]*parser.Image) {
                }
              })
            }
          }),
          (*parser.Part)({
            Name: (string) (len=12) "Presenter(s)",
            Type: (string) (len=4) "list",
            Value: (string) "",
            Values: ([]string) (len=5) {
              (string) (len=16) "  - Alesha Dixon",
              (string) (len=21) "  - Hannah Waddingham",
              (string) (len=16) "  - Julia Sanina",
              (string) (len=25) "  - Graham Norton (final)",
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) {
            }
          }),
          (*parser.Part)({
            Name: (string) (len=11) "Directed by",
            Type: (string) (len=4) "list",
            Value: (string) "",
            Values: ([]string) (len=4) {
              (string) (len=17) "  - Nikki Parsons",
              (string) (len=21) "  - Richard Valentine",
              (string) (len=18) "  - Ollie Bartlett",
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) {
            }
          }),
          (*parser.Part)({
            Name: (string) (len=20) "Executive supervisor",
            Type: (string) (len=5) "field",
            Value: (string) (len=17) "Martin Österdahl",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) (len=1) {
              (*parser.Link)({
                URL: (string) (len=47) "https://en.wikipedia.org/wiki/Martin_Österdahl",
                Text: (string) (len=17) "Martin Österdahl",
                Images: ([]*parser.Image) {
                }
              })
            }
          }),
          (*parser.Part)({
            Name: (string) (len=18) "Executive producer",
            Type: (string) (len=5) "field",
            Value: (string) (len=15) "Andrew Cartmell",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) {
            }
          }),
          (*parser.Part)({
            Name: (string) (len=16) "Host broadcaster",
            Type: (string) (len=5) "field",
            Value: (string) (len=38) "British Broadcasting Corporation (BBC)",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) (len=1) {
              (*parser.Link)({
                URL: (string) (len=33) "https://en.wikipedia.org/wiki/BBC",
                Text: (string) (len=32) "British Broadcasting Corporation",
                Images: ([]*parser.Image) {
                }
              })
            }
          }),
          (*parser.Part)({
            Name: (string) (len=7) "Website",
            Type: (string) (len=5) "field",
            Value: (string) (len=34) "eurovision.tv/event/liverpool-2023",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) (len=1) {
              (*parser.Link)({
                URL: (string) (len=42) "https://eurovision.tv/event/liverpool-2023",
                Text: (string) (len=34) "eurovision.tv/event/liverpool-2023",
                Images: ([]*parser.Image) {
                }
              })
            }
          })
        },
        Images: ([]*parser.Image) <nil>,
        Links: ([]*parser.Link) <nil>
      }),
      (*parser.Part)({
        Name: (string) (len=12) "Participants",
        Type: (string) (len=7) "section",
        Value: (string) "",
        Values: ([]string) <nil>,
        HasParts: ([]*parser.Part) (len=6) {
          (*parser.Part)({
            Name: (string) (len=17) "Number of entries",
            Type: (string) (len=5) "field",
            Value: (string) (len=2) "37",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) {
            }
          }),
          (*parser.Part)({
            Name: (string) (len=19) "Number of finalists",
            Type: (string) (len=5) "field",
            Value: (string) (len=2) "26",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) {
            }
          }),
          (*parser.Part)({
            Name: (string) (len=18) "Debuting countries",
            Type: (string) (len=5) "field",
            Value: (string) (len=4) "None",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) {
            }
          }),
          (*parser.Part)({
            Name: (string) (len=19) "Returning countries",
            Type: (string) (len=5) "field",
            Value: (string) (len=4) "None",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) {
            }
          }),
          (*parser.Part)({
            Name: (string) (len=23) "Non-returning countries",
            Type: (string) (len=4) "list",
            Value: (string) "",
            Values: ([]string) (len=4) {
              (string) (len=14) "  - \u00a0Bulgaria",
              (string) (len=16) "  - \u00a0Montenegro",
              (string) (len=21) "  - \u00a0North Macedonia",
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) {
            }
          }),
          (*parser.Part)({
            Name: (string) "",
            Type: (string) (len=5) "field",
            Value: (string) (len=128) "Participation map Finalist countries Did not qualify from the semi-final Countries that participated in the past but not in 2023",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) (len=1) {
              (*parser.Image)({
                ContentUrl: (string) (len=101) "https://upload.wikimedia.org/wikipedia/commons/thumb/f/f2/ESC_2023_Map.svg/298px-ESC_2023_Map.svg.png",
                AlternativeText: (string) (len=41) "A coloured map of the countries of Europe",
                Caption: (string) "",
                Height: (int) 298,
                Width: (int) 298
              })
            },
            Links: ([]*parser.Link) (len=1) {
              (*parser.Link)({
                URL: (string) (len=88) "https://en.wikipedia.org/wiki/Template:Infobox_song_contest/Eurovision_Song_Contest_2023",
                Text: (string) (len=17) "Participation map",
                Images: ([]*parser.Image) {
                }
              })
            }
          })
        },
        Images: ([]*parser.Image) <nil>,
        Links: ([]*parser.Link) <nil>
      }),
      (*parser.Part)({
        Name: (string) (len=4) "Vote",
        Type: (string) (len=7) "section",
        Value: (string) "",
        Values: ([]string) <nil>,
        HasParts: ([]*parser.Part) (len=2) {
          (*parser.Part)({
            Name: (string) (len=13) "Voting system",
            Type: (string) (len=5) "field",
            Value: (string) (len=236) "Each country awards one set in the semi-finals, or two sets in the final of 12, 10, 8–1 points to ten songs. In all three shows, online votes from viewers in non-participating countries are aggregated and awarded as one set of points.",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) {
            },
            Links: ([]*parser.Link) {
            }
          }),
          (*parser.Part)({
            Name: (string) (len=12) "Winning song",
            Type: (string) (len=5) "field",
            Value: (string) (len=17) "Sweden \" Tattoo \"",
            Values: ([]string) (len=1) {
              (string) ""
            },
            HasParts: ([]*parser.Part) <nil>,
            Images: ([]*parser.Image) (len=1) {
              (*parser.Image)({
                ContentUrl: (string) (len=99) "https://upload.wikimedia.org/wikipedia/en/thumb/4/4c/Flag_of_Sweden.svg/23px-Flag_of_Sweden.svg.png",
                AlternativeText: (string) "",
                Caption: (string) "",
                Height: (int) 23,
                Width: (int) 23
              })
            },
            Links: ([]*parser.Link) (len=2) {
              (*parser.Link)({
                URL: (string) (len=67) "https://en.wikipedia.org/wiki/Sweden_in_the_Eurovision_Song_Contest",
                Text: (string) (len=6) "Sweden",
                Images: ([]*parser.Image) {
                }
              }),
              (*parser.Link)({
                URL: (string) (len=50) "https://en.wikipedia.org/wiki/Tattoo_(Loreen_song)",
                Text: (string) (len=6) "Tattoo",
                Images: ([]*parser.Image) {
                }
              })
            }
          })
        },
        Images: ([]*parser.Image) <nil>,
        Links: ([]*parser.Link) <nil>
      })
    },
    Images: ([]*parser.Image) <nil>,
    Links: ([]*parser.Link) <nil>
  })
}
